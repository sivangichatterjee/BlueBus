routeMigration.sql=select \
r.route_number as routeNum, r.route_code as routeCode, sum(t.SEATS_BOOKED) as seatsBooked , sum(b.seat_count) as seatCount, \
(sum(t.SEATS_BOOKED)/sum(b.seat_count))*100 as percentage \
from bus b join route r on b.route_number = r.route_number join ticket t on b.bus_code = t.bus_code \
where (t.date_of_departure between ?1 and ?2) \
 group by r.route_number, r.route_code order by 5 desc
 
revenuePerBus.sql=SELECT b.BUS_CODE as busCode, r.ROUTE_CODE as routeCode, \
 (SUM(((ABS((SELECT rs.DISTANCE_FROM_START FROM route_stop rs WHERE ((t.START_STOP_CODE=rs.STOP_CODE) and (r.route_number=rs.route_number))) - \
 (SELECT rs.DISTANCE_FROM_START FROM route_stop rs WHERE ((t.END_STOP_CODE=rs.STOP_CODE) and (r.route_number=rs.route_number))) \
 )*b.FARE_PER_KM)+b.BASIC_FARE)*t.SEATS_BOOKED)) as 'farePerBus' \
 FROM ticket t JOIN bus b ON b.BUS_CODE=t.BUS_CODE \
 JOIN route r ON r.ROUTE_NUMBER=b.ROUTE_NUMBER \
 WHERE (t.DATE_OF_DEPARTURE BETWEEN ?1 and ?2) \
 GROUP BY t.BUS_CODE order by 3 desc
 
perBusData.sql=SELECT b.BUS_CODE as busCode,r.ROUTE_CODE as routeCode, \
SUM(t.SEATS_BOOKED) as TotalTicketsBooked \
FROM ticket t JOIN bus b ON t.BUS_CODE=b.BUS_CODE \
JOIN route r on b.ROUTE_NUMBER=r.ROUTE_NUMBER \
WHERE (t.DATE_OF_DEPARTURE BETWEEN ?1 and ?2) \
GROUP BY t.BUS_CODE ORDER BY 3 DESC